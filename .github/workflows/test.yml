name: Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  terratest:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: "Harden Runner"
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Setup Go"
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: test/go.mod
          cache: true

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd #v3.1.2

      - name: "Setup node"
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "22.x" # Match this with your Lambda runtime version
      - name: "Install JUnit Reporter"
        working-directory: test
        run: go install github.com/jstemmer/go-junit-report/v2@v2.1.0

      - name: "Configure Core Apply Role"
        uses: aws-actions/configure-aws-credentials@f24d7193d98baebaeacc7e2227925dd47cc267f5 # v4.2.0
        with:
          role-to-assume: ${{ vars.CORE_APPLY_ROLE }}
          aws-region: us-east-1

      - name: "Configure Core Apply Role Profile"
        run: |
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile core-profile
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile core-profile
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile core-profile

      - name: "Configure Sandbox Apply Role"
        uses: aws-actions/configure-aws-credentials@f24d7193d98baebaeacc7e2227925dd47cc267f5 # v4.2.0
        with:
          role-to-assume: ${{ vars.SANDBOX_APPLY_ROLE }}
          aws-region: us-east-1

      - name: "Run Tests"
        working-directory: test
        shell: bash
        env:
          TF_VAR_route53_profile: core-profile
          TF_VAR_route53_zone_id: ${{ secrets.CORE_HOSTED_ZONE_ID }}
          TF_VAR_route53_zone_name: ${{ secrets.CORE_HOSTED_ZONE_NAME }}
        run: |
          set -o pipefail
          npm --version
          go test -race -v ./... 2>&1 | tee results.out

      - name: "Convert Test Results"
        working-directory: test
        shell: bash
        if: hashFiles('test/results.out') != ''
        run: go-junit-report -set-exit-code < results.out > results.xml

      - name: "Upload Test Results"
        uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2.4
        if: hashFiles('test/results.xml') != ''
        with:
          paths: test/results.xml
